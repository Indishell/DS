#include<bits/stdc++.h>
using namespace std;

class Node
{
    public:
        int data;
        Node* next;
};
void push(Node** head_ref, int item)
{
    Node* new_node = new Node;
    new_node->data = item;
    
    new_node->next = *head_ref;
    *head_ref = new_node;
}
void printList(Node* head_ref)
{
    Node* temp = head_ref;
    
    while(temp!= NULL)
    {
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}
void rotate(Node** head_ref, int k)
{
    
    if(k == 0)
        return;
    
    Node* current = *head_ref;
    
    int count = 1;
    while(count < k && current != NULL)
    {
        current = current->next;
        count++;
    }
    
    Node* kthNode = current;
    
    while(current->next != NULL)
        current = current->next;
        
    current->next = *head_ref;
    
    *head_ref = kthNode->next;
    kthNode->next = NULL;
}
int PrintMiddle(Node* head)
{
    if(head == NULL)
        return 0;
        
    Node* fast = head;
    Node* slow = head;
    
    
    while(fast && slow && fast->next)
    {
        fast = fast->next->next;
        slow = slow->next;
        
        
    }
    return slow->data;
}


int main()
{
    Node* head = NULL; 
  
    push(&head, 20); 
    push(&head, 4); 
    push(&head, 15); 
    push(&head, 10); 
    push(&head, 22);

  
    
//   10 15 4 20
  
    printList(head);
    
    cout<<"Middle element is "<< PrintMiddle(head);
    return 0;
}
