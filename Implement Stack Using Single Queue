#include<bits/stdc++.h>
using namespace std;

// Implement Stack using Single Queue
class Stack
{
    queue<int> mq;
    public:
        void push(int value);
        int pop();
        int top();
        bool empty();
};

void Stack :: push(int value)
{
    int size = mq.size();
    
    mq.push(value);
    
    
    for(int i  = 0; i < size; i++)
    {
        mq.push(mq.front());
        mq.pop();
    }
}
bool Stack :: empty()
{
    return mq.empty();
}

int Stack :: pop()
{
    if( mq.empty())
        return INT_MIN;
        
    int popped  = mq.front();
    mq.pop();
    
    return popped;
}

int Stack :: top()
{
    if(mq.empty())
        return -1;
        
    return mq.front();
}


int main()
{
    Stack ms; 
    ms.push(10); 
    ms.push(20); 
    ms.push(30); 
    // cout << ms.top() << endl; 
    
    cout<<ms.pop() << "\n";
    cout<<ms.pop() << "\n";
    cout<<ms.pop() << "\n";
    
    return 0;
}
