#include <bits/stdc++.h>
using namespace std;

#define V 4

int dp[101][101][11];

int solve(int graph[][V],int u, int v, int k)
{
	if(k == 0)
	{
		if(u == v)
			return 1;
			
		return 0;
	}
	if(k < 0)
		return 0;
		
	if(dp[u][v][k] != -1)
		return dp[u][v][k];
		
	int count =0 ;
	for(int i =0;i < V; i++)
	{
		if(graph[u][i]==1)
			count += solve(graph, i, v, k - 1);
	}
	return dp[u][v][k]= count;
}
int main() 
{
	int graph[V][V] = { { 0, 1, 1, 1 }, 
                        { 0, 0, 0, 1 }, 
                        { 0, 0, 0, 1 }, 
                        { 0, 0, 0, 0 } }; 
    int u = 0, v = 3, k = 2; 
    memset(dp, -1,sizeof(dp));
    
    cout << solve(graph, u, v, k);
	return 0;
}
