#include<bits/stdc++.h>
using namespace std;

class Node
{
    public:
        int data;
        Node *left, *right;
};

Node* newNode(int item)
{
    Node* new_node = new Node;
    new_node->data = item;
    new_node->left = new_node->right = NULL;
    return new_node;
}

void printList(Node* head)
{
    Node* temp = head;
    while(temp != NULL)
    {
        cout<<temp->data<<" ";
        temp = temp->right;
    }
}
void binaryTree2DLL(Node* root, Node** head)
{
    if(root == NULL)
        return;
    
    static Node* prev = NULL;    
    
    binaryTree2DLL(root->left, head);
    if(*head == NULL)
    {
        prev = NULL;
        *head = root;
    }
    
    else
    {
        root->left = prev;
        prev->right = root;
    }
    prev = root;
    binaryTree2DLL(root->right, head);
        
}
int main()
{
    Node *root        = newNode(10); 
    root->left        = newNode(12); 
    root->right       = newNode(15); 
    root->left->left  = newNode(25); 
    root->left->right = newNode(30); 
    root->right->left = newNode(36);
    
    Node* head = NULL;
    binaryTree2DLL(root, &head);
    
    printList(head);

    return 0;
}
