#include<bits/stdc++.h>
#include<string>
using namespace std;

#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
#define ll long long
const ll MOD  = 1000000007;



// Q.2 Smallest Missing Positive Number

Recursive:
int SmallestPositive(int A[], int low , int high)
{
	if(low > high)
		return low;
		
	int mid = low + (high - low)/2;
	
	if(A[mid] == mid)
		return SmallestPositive(A, mid + 1, high);
	else
		return SmallestPositive(A, low, mid - 1);
}

Iterative:
int SmallestPositive(int A[], int n)
{
  int low = 0;
  int high = n - 1;
	if(low > high)
		return low;
    
	
  while(low <= high)
  {
	  int mid = low + (high - low)/2;
	  if(A[mid] == mid)
      low = mid + 1;
	  else
      high  = mid - 1;
   }
 
  return low;  
}






int main()
{
	fastIO
	int t;
	cin >> t;

#ifndef ONLINE_JUDGE
	freopen("intput.txt",  "r", stdin);
	freopen("output.txt",  "w", stdout);
#endif

	while (t--)
	{
		int n;
		cin >> n;
		int A[n];
		for (int i = 0; i < n; i++)
			cin >> A[i];

		cout << SmallestPositive(A, 0 ,n - 1) << "\n";
	}

	return 0;
}
