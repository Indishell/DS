
Method 1: Merge 2 Sorted Arrays.

TC: O(m + n)
SC: O(m + n)

double getMedian(int A[], int B[], int m, int n)
{

	double C[m + n];

	int i = 0, j =  0;
	int index = 0;

	while (i < m && j < n)
	{

		if (A[i] < B[j])
			C[index++] = A[i++];

		else
			C[index++] = B[j++];
	}

	while (i < m)
		C[index++] = A[i++];

	while (j < n)
		C[index++] = B[j++];

	if (index & 1)
		return C[index / 2] / 2;

	else
		return double((C[index / 2]  + C[index / 2 - 1]) / 2);
}



Method 2: TC: O(m + n), SC : O(1)



int getMedian(int A[], int B[], int m, int n)
{

	int i = 0, j = 0;
	int count;

	int m1 = -1, m2 = -1;

	if ((m + n) & 1)
	{
		for (count = 0; count <= (m + n) / 2; count++)
		{
			if (i !=  m && i != n)
				m1 = (A[i] > B[j]) ? B[j++] : A[i++];

			else if (i < m)
				m1 = A[i++];

			else
				m1 = B[j++];
		}

		return m1;
	}


	else
	{
		for (count =  0; count <= (m + n) / 2; count++)
		{
			m2 = m1;

			if (i != m && j != n)
				m1 = (A[i] > B[j]) ? B[j++] : A[i++];

			else if (i < m)
				m1 = A[i++];

			else
				m1 = B[j++];
		}

		return (m1 + m2) / 2;
	}
}
